{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":34377,"databundleVersionId":3220602,"sourceType":"competition"}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[],"include_colab_link":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"<a href=\"https://colab.research.google.com/github/mushroom3969/Kaggle/blob/main/Data_Science_template_3.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>","metadata":{"id":"view-in-github","colab_type":"text"}},{"cell_type":"markdown","source":"# Table Content","metadata":{"id":"dDsXrIPZnK38"}},{"cell_type":"markdown","source":"# Define the Problem","metadata":{"id":"UlPIAf9GnK3-"}},{"cell_type":"markdown","source":"🎯Goal : Predicting whether a passenger was transported to an alternate dimension during the Spaceship Titanic's collision with the spacetime anomaly. \n\n- File : \n   - train.csv: 2/3 passengers as training data\n   - test.csv: 1/3 passengers as testing data\n   - sample_submission.csv: Correct format for submiting\n   \n- Features:\n    - PassengerId - A **unique Id** for each passenger. Each Id takes the form gggg_pp where gggg indicates a group the passenger is travelling with and pp is their number within the group. **People in a group are often family members, but not always.**\n    - HomePlanet - The planet the passenger **departed from**, typically their planet of permanent residence.\n    - CryoSleep - Indicates **whether the passenger elected to be put into suspended animation for the duration of the voyage**. Passengers in cryosleep are confined to their cabins.\n    - Cabin - The **cabin number where the passenger is staying**. Takes the form **deck/num/side, where side can be either P for Port or S for Starboard**.\n    - Destination - The planet the passenger will be debarking to.\n    - Age - The age of the passenger.\n    - VIP - Whether the passenger has paid for special VIP service during the voyage.\n    - RoomService, FoodCourt, ShoppingMall, Spa, VRDeck - **Amount the passenger has billed** at each of the Spaceship Titanic's many luxury amenities.\n    - Name - The first and last names of the passenger.\n    - Transported - Whether the passenger was transported to another dimension. This is the target, the column you are trying to predict.","metadata":{}},{"cell_type":"markdown","source":"----","metadata":{"id":"inffsbornK3-"}},{"cell_type":"markdown","source":"# Gather the Data","metadata":{"id":"TN04cvJEnK3-"}},{"cell_type":"markdown","source":"-----","metadata":{"id":"Dw0Gcn_JnK3_"}},{"cell_type":"markdown","source":"# Prepare Data","metadata":{"id":"vV-cTWNNnK3_"}},{"cell_type":"code","source":"!pip install chardet\n!pip install plotly","metadata":{"id":"Bu8HF4G2nK3_","execution":{"iopub.status.busy":"2024-05-29T08:50:29.594476Z","iopub.execute_input":"2024-05-29T08:50:29.594917Z","iopub.status.idle":"2024-05-29T08:50:59.237391Z","shell.execute_reply.started":"2024-05-29T08:50:29.594882Z","shell.execute_reply":"2024-05-29T08:50:59.236024Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"Requirement already satisfied: chardet in /opt/conda/lib/python3.10/site-packages (5.2.0)\nRequirement already satisfied: plotly in /opt/conda/lib/python3.10/site-packages (5.18.0)\nRequirement already satisfied: tenacity>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from plotly) (8.2.3)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from plotly) (21.3)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->plotly) (3.1.1)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Import Libraries","metadata":{"id":"c7TnwUPTnK3_"}},{"cell_type":"code","source":"import warnings\n\nfrom pathlib import Path\nimport os\nimport chardet\nimport requests\n\nimport pandas as pd\nimport numpy as np\n\n","metadata":{"id":"kyri-tj2nK4A","execution":{"iopub.status.busy":"2024-05-29T08:50:59.240216Z","iopub.execute_input":"2024-05-29T08:50:59.240629Z","iopub.status.idle":"2024-05-29T08:50:59.249067Z","shell.execute_reply.started":"2024-05-29T08:50:59.240593Z","shell.execute_reply":"2024-05-29T08:50:59.247405Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"### Visulize","metadata":{"id":"1YmkekpNnK4A"}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n\n# Seaborn\nimport seaborn as sns\n\n\n# Plotly\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px","metadata":{"id":"XRRNjEQnnK4A","execution":{"iopub.status.busy":"2024-05-29T08:50:59.250614Z","iopub.execute_input":"2024-05-29T08:50:59.251064Z","iopub.status.idle":"2024-05-29T08:50:59.262419Z","shell.execute_reply.started":"2024-05-29T08:50:59.251025Z","shell.execute_reply":"2024-05-29T08:50:59.260827Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":"### Model Library","metadata":{"id":"_ZNAAbL5nK4B"}},{"cell_type":"markdown","source":"----","metadata":{"id":"gpLyp6kbnK4B"}},{"cell_type":"markdown","source":"## Load Data","metadata":{"id":"hJcT0czCnK4B"}},{"cell_type":"code","source":"class LoadingFile():\n    def __init__(self, path, name, url=None):\n        self.path = path\n        self.name = name\n        self.url = url\n\n    def size(self):\n        kib = 1024\n        size = os.path.getsize(Path(self.path))\n        print(f\"{self.name} size: {np.round(size / kib)} Kib\")\n\n    def Encoding_predict(self):\n        file_path = Path(self.path)\n        with open(file_path, 'rb') as f:\n            contents = f.read()\n\n        encoding_info = chardet.detect(contents)\n\n        detected_encoding = encoding_info['encoding']\n        confidence = encoding_info['confidence']\n\n        print(f\"File name: {self.name:<25}\\nEncoding: {detected_encoding:<10}Confidence: {confidence}\")\n\n\n    def download_data(self):\n        data_path = Path(self.path)\n        if data_path.is_dir():\n            print(f\"{data_path} directory exist.\")\n        else:\n            print(f\"Creating {data_path}\")\n            data_path.mkdir(parents=True, exist_ok=True)\n\n        if (data_path / Path(self.name)).exists():\n            print(f\"{self.name} already exist\")\n            \n        else:\n            with open(data_path / self.name, \"wb\") as f:\n                req = requests.get(self.url)\n                print(\"Downloading data...\")\n                f.write(req.content)\n                print(\"Done!\")\nname=[]\npath = []\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        name.append(filename)\n        path.append(os.path.join(dirname, filename))\n\n        print(f\"Path: {dirname} | Data_Name: {filename}\")\n        size = LoadingFile(os.path.join(dirname, filename), filename).size()\n        print()\n\n#LoadingFile(path[0], name[0]).size()\n#LoadingFile(path[1], name[1]).size()","metadata":{"id":"vsy9-XCInK4B","execution":{"iopub.status.busy":"2024-05-29T08:50:59.265544Z","iopub.execute_input":"2024-05-29T08:50:59.265930Z","iopub.status.idle":"2024-05-29T08:50:59.297379Z","shell.execute_reply.started":"2024-05-29T08:50:59.265900Z","shell.execute_reply":"2024-05-29T08:50:59.296108Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Path: /kaggle/input/spaceship-titanic | Data_Name: sample_submission.csv\nsample_submission.csv size: 58.0 Kib\n\nPath: /kaggle/input/spaceship-titanic | Data_Name: train.csv\ntrain.csv size: 787.0 Kib\n\nPath: /kaggle/input/spaceship-titanic | Data_Name: test.csv\ntest.csv size: 364.0 Kib\n\n","output_type":"stream"}]},{"cell_type":"code","source":"origin_df = pd.read_csv(path[1])\norigin_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:50:59.298982Z","iopub.execute_input":"2024-05-29T08:50:59.299460Z","iopub.status.idle":"2024-05-29T08:50:59.364641Z","shell.execute_reply.started":"2024-05-29T08:50:59.299419Z","shell.execute_reply":"2024-05-29T08:50:59.363515Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"  PassengerId HomePlanet CryoSleep  Cabin  Destination   Age    VIP  \\\n0     0001_01     Europa     False  B/0/P  TRAPPIST-1e  39.0  False   \n1     0002_01      Earth     False  F/0/S  TRAPPIST-1e  24.0  False   \n2     0003_01     Europa     False  A/0/S  TRAPPIST-1e  58.0   True   \n3     0003_02     Europa     False  A/0/S  TRAPPIST-1e  33.0  False   \n4     0004_01      Earth     False  F/1/S  TRAPPIST-1e  16.0  False   \n\n   RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n0          0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n1        109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n2         43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n3          0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n4        303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n\n   Transported  \n0        False  \n1         True  \n2        False  \n3        False  \n4         True  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>HomePlanet</th>\n      <th>CryoSleep</th>\n      <th>Cabin</th>\n      <th>Destination</th>\n      <th>Age</th>\n      <th>VIP</th>\n      <th>RoomService</th>\n      <th>FoodCourt</th>\n      <th>ShoppingMall</th>\n      <th>Spa</th>\n      <th>VRDeck</th>\n      <th>Name</th>\n      <th>Transported</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0001_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>B/0/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>39.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Maham Ofracculy</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0002_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>F/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>24.0</td>\n      <td>False</td>\n      <td>109.0</td>\n      <td>9.0</td>\n      <td>25.0</td>\n      <td>549.0</td>\n      <td>44.0</td>\n      <td>Juanna Vines</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0003_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>58.0</td>\n      <td>True</td>\n      <td>43.0</td>\n      <td>3576.0</td>\n      <td>0.0</td>\n      <td>6715.0</td>\n      <td>49.0</td>\n      <td>Altark Susent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0003_02</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>33.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>1283.0</td>\n      <td>371.0</td>\n      <td>3329.0</td>\n      <td>193.0</td>\n      <td>Solam Susent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0004_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>F/1/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>16.0</td>\n      <td>False</td>\n      <td>303.0</td>\n      <td>70.0</td>\n      <td>151.0</td>\n      <td>565.0</td>\n      <td>2.0</td>\n      <td>Willy Santantines</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"origin_df.shape","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:50:59.365848Z","iopub.execute_input":"2024-05-29T08:50:59.366308Z","iopub.status.idle":"2024-05-29T08:50:59.373877Z","shell.execute_reply.started":"2024-05-29T08:50:59.366257Z","shell.execute_reply":"2024-05-29T08:50:59.372697Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"(8693, 14)"},"metadata":{}}]},{"cell_type":"markdown","source":"### Feature classification","metadata":{}},{"cell_type":"code","source":"numeric_features = {\n    \"continuous\":[\"RoomService\", \"FoodCourt\",\"ShoppingMall\", \"Spa\", \"VRDeck\"],\n    \"discrete\":[\"Age\"]\n}\n\ncategorial_features = {\n    \"nominal\":[\"HomePlanet\", \"CryoSleep\", \"Destination\", \"VIP\"],\n    \"ordinal\":[]\n}\n\ntext_features = [\"PassengerId\", \"Cabin\", \"Name\"]\n\ntarget = \"Transported\"","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:50:59.375530Z","iopub.execute_input":"2024-05-29T08:50:59.375976Z","iopub.status.idle":"2024-05-29T08:50:59.386333Z","shell.execute_reply.started":"2024-05-29T08:50:59.375912Z","shell.execute_reply":"2024-05-29T08:50:59.385106Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":"----","metadata":{"id":"ZmPnf4oGnK4C"}},{"cell_type":"markdown","source":"## Processing_1","metadata":{"id":"J894d_LSnK4C"}},{"cell_type":"markdown","source":"### New Features `text_features`","metadata":{}},{"cell_type":"code","source":"origin_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:55:48.624780Z","iopub.execute_input":"2024-05-29T08:55:48.625248Z","iopub.status.idle":"2024-05-29T08:55:48.649265Z","shell.execute_reply.started":"2024-05-29T08:55:48.625208Z","shell.execute_reply":"2024-05-29T08:55:48.647869Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"  PassengerId HomePlanet CryoSleep  Cabin  Destination   Age    VIP  \\\n0     0001_01     Europa     False  B/0/P  TRAPPIST-1e  39.0  False   \n1     0002_01      Earth     False  F/0/S  TRAPPIST-1e  24.0  False   \n2     0003_01     Europa     False  A/0/S  TRAPPIST-1e  58.0   True   \n3     0003_02     Europa     False  A/0/S  TRAPPIST-1e  33.0  False   \n4     0004_01      Earth     False  F/1/S  TRAPPIST-1e  16.0  False   \n\n   RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n0          0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n1        109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n2         43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n3          0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n4        303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n\n   Transported  \n0        False  \n1         True  \n2        False  \n3        False  \n4         True  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>HomePlanet</th>\n      <th>CryoSleep</th>\n      <th>Cabin</th>\n      <th>Destination</th>\n      <th>Age</th>\n      <th>VIP</th>\n      <th>RoomService</th>\n      <th>FoodCourt</th>\n      <th>ShoppingMall</th>\n      <th>Spa</th>\n      <th>VRDeck</th>\n      <th>Name</th>\n      <th>Transported</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0001_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>B/0/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>39.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Maham Ofracculy</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0002_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>F/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>24.0</td>\n      <td>False</td>\n      <td>109.0</td>\n      <td>9.0</td>\n      <td>25.0</td>\n      <td>549.0</td>\n      <td>44.0</td>\n      <td>Juanna Vines</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0003_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>58.0</td>\n      <td>True</td>\n      <td>43.0</td>\n      <td>3576.0</td>\n      <td>0.0</td>\n      <td>6715.0</td>\n      <td>49.0</td>\n      <td>Altark Susent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0003_02</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>33.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>1283.0</td>\n      <td>371.0</td>\n      <td>3329.0</td>\n      <td>193.0</td>\n      <td>Solam Susent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0004_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>F/1/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>16.0</td>\n      <td>False</td>\n      <td>303.0</td>\n      <td>70.0</td>\n      <td>151.0</td>\n      <td>565.0</td>\n      <td>2.0</td>\n      <td>Willy Santantines</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"group_number = origin_df[\"PassengerId\"].str.split(\"_\")\ngroup_number","metadata":{"execution":{"iopub.status.busy":"2024-05-29T09:00:04.238373Z","iopub.execute_input":"2024-05-29T09:00:04.238925Z","iopub.status.idle":"2024-05-29T09:00:04.265205Z","shell.execute_reply.started":"2024-05-29T09:00:04.238880Z","shell.execute_reply":"2024-05-29T09:00:04.263634Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"0       [0001, 01]\n1       [0002, 01]\n2       [0003, 01]\n3       [0003, 02]\n4       [0004, 01]\n           ...    \n8688    [9276, 01]\n8689    [9278, 01]\n8690    [9279, 01]\n8691    [9280, 01]\n8692    [9280, 02]\nName: PassengerId, Length: 8693, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"# Two new features from PassengerId\ngroup_number = origin_df[\"PassengerId\"].str.split(\"_\")\ngroup = group_number.\norigin_df[\"group\"] = origin_df[\"group\"]\norigin_df[\"number\"]","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Data Cleaning\n\n1. Drop\n2. mean, median imputation\n3. hot deck imputation\n4. regression imputation\n5. ML (kNN、decision tree、random forest) - similar with hot deck\n6. multiple imputation\n7. Create NA as a new class\n8. NA change to a number/class then create new feature\n(if we want to use multiple imputation in numeric data, we should bin the numeric to class type which base on our domain knowledge)\n\nNA \"insome sense random”\n\n>numeric data ：1、2、3、4、5、6\n>\n>categorical data ：1、2 (mode)、3、5、6。\n>\n>MCAR ：1 (not recommendate)、2、3、4、5\n>\n>MNAR ：6、7","metadata":{"id":"cxQja8DInK4C"}},{"cell_type":"code","source":"origin_df.isna().apply(sum, axis=0)","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:50:59.387661Z","iopub.execute_input":"2024-05-29T08:50:59.387972Z","iopub.status.idle":"2024-05-29T08:50:59.427375Z","shell.execute_reply.started":"2024-05-29T08:50:59.387946Z","shell.execute_reply":"2024-05-29T08:50:59.426504Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"PassengerId       0\nHomePlanet      201\nCryoSleep       217\nCabin           199\nDestination     182\nAge             179\nVIP             203\nRoomService     181\nFoodCourt       183\nShoppingMall    208\nSpa             183\nVRDeck          188\nName            200\nTransported       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"HomePlanet","metadata":{}},{"cell_type":"code","source":"origin_df[origin_df[\"HomePlanet\"].isna()]","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:50:59.428779Z","iopub.execute_input":"2024-05-29T08:50:59.429379Z","iopub.status.idle":"2024-05-29T08:50:59.459766Z","shell.execute_reply.started":"2024-05-29T08:50:59.429348Z","shell.execute_reply":"2024-05-29T08:50:59.458804Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"     PassengerId HomePlanet CryoSleep     Cabin  Destination   Age    VIP  \\\n59       0064_02        NaN      True     E/3/S  TRAPPIST-1e  33.0  False   \n113      0119_01        NaN     False     A/0/P  TRAPPIST-1e  39.0  False   \n186      0210_01        NaN      True     D/6/P  55 Cancri e  24.0  False   \n225      0242_01        NaN     False    F/46/S  TRAPPIST-1e  18.0  False   \n234      0251_01        NaN      True    C/11/S  55 Cancri e  54.0  False   \n...          ...        ...       ...       ...          ...   ...    ...   \n8515     9084_01        NaN     False   E/582/P  TRAPPIST-1e  25.0  False   \n8613     9194_01        NaN     False   E/603/S  55 Cancri e  53.0  False   \n8666     9248_01        NaN     False  F/1792/S  55 Cancri e  38.0    NaN   \n8674     9257_01        NaN     False  F/1892/P  TRAPPIST-1e  13.0  False   \n8684     9274_01        NaN      True  G/1508/P  TRAPPIST-1e  23.0  False   \n\n      RoomService  FoodCourt  ShoppingMall    Spa  VRDeck             Name  \\\n59            0.0        0.0           NaN    0.0     0.0      Colatz Keen   \n113           0.0     2344.0           0.0   65.0  6898.0     Batan Coning   \n186           0.0        0.0           NaN    0.0     0.0   Arraid Inicont   \n225         313.0        1.0         691.0  283.0     0.0       Almone Sté   \n234           0.0        0.0           0.0    0.0     0.0    Diphah Amsive   \n...           ...        ...           ...    ...     ...              ...   \n8515       1258.0        0.0          22.0   19.0     0.0        Jurs Mone   \n8613          0.0     4017.0           0.0   13.0  3147.0              NaN   \n8666         28.0     1208.0         973.0  207.0     0.0       Gian Perle   \n8674         39.0        0.0        1085.0   24.0     0.0       Ties Apple   \n8684          0.0        0.0           0.0    0.0     0.0  Chelsa Bullisey   \n\n      Transported  \n59           True  \n113         False  \n186          True  \n225         False  \n234          True  \n...           ...  \n8515        False  \n8613        False  \n8666         True  \n8674        False  \n8684         True  \n\n[201 rows x 14 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>HomePlanet</th>\n      <th>CryoSleep</th>\n      <th>Cabin</th>\n      <th>Destination</th>\n      <th>Age</th>\n      <th>VIP</th>\n      <th>RoomService</th>\n      <th>FoodCourt</th>\n      <th>ShoppingMall</th>\n      <th>Spa</th>\n      <th>VRDeck</th>\n      <th>Name</th>\n      <th>Transported</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>59</th>\n      <td>0064_02</td>\n      <td>NaN</td>\n      <td>True</td>\n      <td>E/3/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>33.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Colatz Keen</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>113</th>\n      <td>0119_01</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>A/0/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>39.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>2344.0</td>\n      <td>0.0</td>\n      <td>65.0</td>\n      <td>6898.0</td>\n      <td>Batan Coning</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>186</th>\n      <td>0210_01</td>\n      <td>NaN</td>\n      <td>True</td>\n      <td>D/6/P</td>\n      <td>55 Cancri e</td>\n      <td>24.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Arraid Inicont</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>225</th>\n      <td>0242_01</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>F/46/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>18.0</td>\n      <td>False</td>\n      <td>313.0</td>\n      <td>1.0</td>\n      <td>691.0</td>\n      <td>283.0</td>\n      <td>0.0</td>\n      <td>Almone Sté</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>234</th>\n      <td>0251_01</td>\n      <td>NaN</td>\n      <td>True</td>\n      <td>C/11/S</td>\n      <td>55 Cancri e</td>\n      <td>54.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Diphah Amsive</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8515</th>\n      <td>9084_01</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>E/582/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>25.0</td>\n      <td>False</td>\n      <td>1258.0</td>\n      <td>0.0</td>\n      <td>22.0</td>\n      <td>19.0</td>\n      <td>0.0</td>\n      <td>Jurs Mone</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8613</th>\n      <td>9194_01</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>E/603/S</td>\n      <td>55 Cancri e</td>\n      <td>53.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>4017.0</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>3147.0</td>\n      <td>NaN</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8666</th>\n      <td>9248_01</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>F/1792/S</td>\n      <td>55 Cancri e</td>\n      <td>38.0</td>\n      <td>NaN</td>\n      <td>28.0</td>\n      <td>1208.0</td>\n      <td>973.0</td>\n      <td>207.0</td>\n      <td>0.0</td>\n      <td>Gian Perle</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8674</th>\n      <td>9257_01</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>F/1892/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>13.0</td>\n      <td>False</td>\n      <td>39.0</td>\n      <td>0.0</td>\n      <td>1085.0</td>\n      <td>24.0</td>\n      <td>0.0</td>\n      <td>Ties Apple</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8684</th>\n      <td>9274_01</td>\n      <td>NaN</td>\n      <td>True</td>\n      <td>G/1508/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>23.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Chelsa Bullisey</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>201 rows × 14 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"CryoSleep     ","metadata":{}},{"cell_type":"markdown","source":"Cabin","metadata":{}},{"cell_type":"markdown","source":"Destination","metadata":{}},{"cell_type":"markdown","source":"Age","metadata":{}},{"cell_type":"markdown","source":"VIP","metadata":{}},{"cell_type":"markdown","source":"RoomService","metadata":{}},{"cell_type":"markdown","source":"FoodCourt","metadata":{}},{"cell_type":"markdown","source":"ShoppingMall","metadata":{"execution":{"iopub.status.busy":"2024-05-29T08:53:16.199264Z","iopub.execute_input":"2024-05-29T08:53:16.199708Z","iopub.status.idle":"2024-05-29T08:53:16.856538Z","shell.execute_reply.started":"2024-05-29T08:53:16.199672Z","shell.execute_reply":"2024-05-29T08:53:16.855074Z"}}},{"cell_type":"markdown","source":"Spa ","metadata":{}},{"cell_type":"markdown","source":"VRDeck","metadata":{}},{"cell_type":"markdown","source":"Name ","metadata":{}},{"cell_type":"markdown","source":"### Feature Engineering","metadata":{"id":"F5vZcVePnK4C"}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Convert Formats","metadata":{"id":"M7gJEn7anK4C"}},{"cell_type":"markdown","source":"### Double Check Cleaned Data","metadata":{"id":"TKgsk6rbnK4C"}},{"cell_type":"markdown","source":"-----","metadata":{"id":"zMT7VYw4nK4D"}},{"cell_type":"markdown","source":"# Data Analysis","metadata":{"id":"rCv7BmfgnK4D"}},{"cell_type":"markdown","source":"## Exploratory","metadata":{"id":"f6bvFLfYnK4D"}},{"cell_type":"markdown","source":"## Inference","metadata":{"id":"6CIqIcjPnK4D"}},{"cell_type":"markdown","source":"## Feature Selection","metadata":{"id":"UbWDF1KcnK4E"}},{"cell_type":"markdown","source":"-----","metadata":{"id":"wCvxwKyZnK4E"}},{"cell_type":"markdown","source":"# Split Training and Testing Data","metadata":{"id":"EpdD4qYxnK4E"}},{"cell_type":"markdown","source":"-----","metadata":{"id":"1cESlh8DnK4E"}},{"cell_type":"markdown","source":"# Model Data - 1","metadata":{"id":"B2ft2RIJnK4E"}},{"cell_type":"markdown","source":"----","metadata":{"id":"wPCo72mmnK4E"}},{"cell_type":"markdown","source":"## Model + Processing_2 -","metadata":{"id":"vpKtInDWnK4E"}},{"cell_type":"markdown","source":"### Training","metadata":{"id":"I0pWEVrSnK4E"}},{"cell_type":"markdown","source":"### Evaluate Model Performance","metadata":{"id":"4VPDcDLEnK4E"}},{"cell_type":"markdown","source":"### Tune Model - Hyper-Parameters","metadata":{"id":"-A08pUD1nK4E"}},{"cell_type":"markdown","source":"### Tune Model - Feature Selection","metadata":{"id":"Sl71xQVMnK4F"}},{"cell_type":"markdown","source":"---","metadata":{"id":"07RcdMQ-nK4F"}},{"cell_type":"markdown","source":"## Model + Processing_2 -","metadata":{"id":"e6bpW8_-nK4F"}},{"cell_type":"markdown","source":"---","metadata":{"id":"pi6DKqL5nK4F"}},{"cell_type":"markdown","source":"# Conclusion","metadata":{"id":"BHatYHlOnK4F"}},{"cell_type":"markdown","source":"---","metadata":{"id":"UdzLFO6JnK4F"}},{"cell_type":"markdown","source":"# Optimize and Strategize","metadata":{"id":"vNhzbRw1nK4F"}},{"cell_type":"markdown","source":"-----","metadata":{"id":"AyJcYJk4nK4F"}},{"cell_type":"markdown","source":"# Log","metadata":{"id":"1R8ByCjbnK4F"}},{"cell_type":"code","source":"","metadata":{"id":"y_Tt1z4rnK4F"},"execution_count":null,"outputs":[]}]}