{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3936,"databundleVersionId":137277,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Introduction\n\n*Overview*\n\nThis competition asked to predict the forest cover type (the predominant kind of tree cover) using strictly cartographic variables (as opposed to remotely sensed data). The actual forest cover type for a given 30 x 30 meter cell was determined from US Forest Service (USFS) Region 2 Resource Information System data. Independent variables were derived from data obtained from the US Geological Survey (USGS) and USFS. The data is in raw form (not scaled) and contains binary columns for qualitative independent variables such as wilderness areas and soil type.\n\n*Study Area*\n\nThe study area includes four wilderness areas located in the Roosevelt National Forest of northern Colorado. These areas represent forests with minimal human-caused disturbances, meaning existing forest cover types are more a result of ecological processes rather than forest management practices.\n\n*Dataset Description*\n\nThe study area includes four wilderness areas located in the Roosevelt National Forest of northern Colorado. Each observation is a 30m x 30m patch. You are asked to predict an integer classification for the forest cover type. \n\n- The seven types are:\n\n    1. Spruce/Fir\n    2. Lodgepole Pine\n    3. Ponderosa Pine\n    4. Cottonwood/Willow\n    5. Aspen\n    6. Douglas-fir\n    7. Krummholz\n    \n    \n- Data Fields:\n\n    1. Elevation: Elevation in meters\n    2. Aspect: Aspect in degrees azimuth\n    3. Slope: Slope in degrees\n    4. Horizontal_Distance_To_Hydrology: Horizontal distance to nearest surface water features\n    5. Vertical_Distance_To_Hydrology: Vertical distance to nearest surface water features\n    6. Horizontal_Distance_To_Roadways: Horizontal distance to nearest roadway\n    7. Hillshade_9am (0 to 255 index): Hillshade index at 9am, summer solstice\n    8. Hillshade_Noon (0 to 255 index): Hillshade index at noon, summer solstice\n    9. Hillshade_3pm (0 to 255 index): Hillshade index at 3pm, summer solstice\n    10. Horizontal_Distance_To_Fire_Points: Horizontal distance to nearest wildfire ignition points\n    11. Wilderness_Area (4 binary columns, 0 = absence or 1 = presence): Wilderness area designation\n    12. Soil_Type (40 binary columns, 0 = absence or 1 = presence): Soil type designation\n    13. Cover_Type (7 types, integers 1 to 7): Forest cover type designation\n    \n","metadata":{}},{"cell_type":"markdown","source":"> Wilderness Areas\n\n1. Rawah Wilderness Area\n2. Neota Wilderness Area\n3. Comanche Peak Wilderness Area\n4. Cache la Poudre Wilderness Area\n    \n    \n>Soil Types\n\n1. Cathedral family - Rock outcrop complex, extremely stony\n2. Vanet - Ratake families complex, very stony\n3. Haploborolis - Rock outcrop complex, rubbly\n4. Ratake family - Rock outcrop complex, rubbly\n5. Vanet family - Rock outcrop complex, rubbly\n6. Vanet - Wetmore families - Rock outcrop complex, stony\n    \n    \n    \n>Gothic family\n\n1. Supervisor - Limber families complex\n2. Troutville family, very stony\n3. Bullwark - Catamount families - Rock outcrop complex, rubbly\n4. Bullwark - Catamount families - Rock land complex, rubbly\n5. Legault family - Rock land complex, stony\n6. Catamount family - Rock land - Bullwark family complex, rubbly\n7. Pachic Argiborolis - Aquolis complex\n8. Unspecified in the USFS Soil and ELU Survey\n9. Cryaquolis - Cryoborolis complex\n10. Gateview family - Cryaquolis complex\n11. Rogert family, very stony\n12. Typic Cryaquolis - Borohemists complex\n13. Typic Cryaquepts - Typic Cryaquolls complex\n14. Typic Cryaquolls - Leighcan family, till substratum complex\n15. Leighcan family, till substratum, extremely bouldery\n16. Leighcan family, till substratum - Typic Cryaquolls complex\n17. Leighcan family, extremely stony\n18. Leighcan family, warm, extremely stony\n19. Granile - Catamount families complex, very stony\n20. Leighcan family, warm - Rock outcrop complex, extremely stony\n21. Leighcan family - Rock outcrop complex, extremely stony\n22. Como - Legault families complex, extremely stony\n23. Como family - Rock land - Legault family complex, extremely stony\n24. Leighcan - Catamount families complex, extremely stony\n25. Catamount family - Rock outcrop - Leighcan family complex, extremely stony\n26. Leighcan - Catamount families - Rock outcrop complex, extremely stony\n27. Cryorthents - Rock land complex, extremely stony\n28. Cryumbrepts - Rock outcrop - Cryaquepts complex\n29. Bross family - Rock land - Cryumbrepts complex, extremely stony\n30. Rock outcrop - Cryumbrepts - Cryorthents complex, extremely stony\n31. Leighcan - Moran families - Cryaquolls complex, extremely stony\n32. Moran family - Cryorthents - Leighcan family complex, extremely stony\n33. Moran family - Cryorthents - Rock land complex, extremely stony\n","metadata":{}},{"cell_type":"markdown","source":"----","metadata":{}},{"cell_type":"markdown","source":"# Target Problem\n\nThe training set (15,120 observations) contains both features and the Cover_Type. The test set contains only the features. You must predict the Cover_Type for every row in the test set (565,892 observations).\n\n","metadata":{}},{"cell_type":"markdown","source":"**Evaluation**\n\nSubmissions are evaluated on **multi-class classification accuracy**.\n","metadata":{}},{"cell_type":"markdown","source":"----","metadata":{}},{"cell_type":"markdown","source":"# Import Libraries","metadata":{}},{"cell_type":"code","source":"!pip install chardet\n!pip install plotly","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:33:28.642059Z","iopub.execute_input":"2024-06-20T14:33:28.642486Z","iopub.status.idle":"2024-06-20T14:34:03.887641Z","shell.execute_reply.started":"2024-06-20T14:33:28.642456Z","shell.execute_reply":"2024-06-20T14:34:03.886308Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Collecting chardet\n  Downloading chardet-5.2.0-py3-none-any.whl.metadata (3.4 kB)\nDownloading chardet-5.2.0-py3-none-any.whl (199 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.4/199.4 kB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: chardet\nSuccessfully installed chardet-5.2.0\nRequirement already satisfied: plotly in /opt/conda/lib/python3.10/site-packages (5.18.0)\nRequirement already satisfied: tenacity>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from plotly) (8.2.3)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from plotly) (21.3)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->plotly) (3.1.1)\n","output_type":"stream"}]},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings('ignore')\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nfrom pathlib import Path\nimport os\nimport chardet\nimport requests\nimport itertools\n\nimport time\n\nimport pandas as pd\nimport numpy as np","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:34:03.890008Z","iopub.execute_input":"2024-06-20T14:34:03.890421Z","iopub.status.idle":"2024-06-20T14:34:04.532475Z","shell.execute_reply.started":"2024-06-20T14:34:03.890382Z","shell.execute_reply":"2024-06-20T14:34:04.531218Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"*Visualize*","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n%matplotlib inline\n\n\n# Seaborn\nimport seaborn as sns\nsns.set(style='darkgrid', font_scale=1.4)\n\n\n# Plotly\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\n\n#mlxtend\nfrom mlxtend.plotting import scatterplotmatrix\nfrom mlxtend.plotting import heatmap","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:34:04.533953Z","iopub.execute_input":"2024-06-20T14:34:04.534471Z","iopub.status.idle":"2024-06-20T14:34:07.853053Z","shell.execute_reply.started":"2024-06-20T14:34:04.534440Z","shell.execute_reply":"2024-06-20T14:34:07.851494Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"*Sklearn and Model*","metadata":{}},{"cell_type":"code","source":"import eli5\nfrom eli5.sklearn import PermutationImportance\nfrom sklearn.utils import resample\n\nfrom sklearn.base import BaseEstimator, TransformerMixin\n\n#Feature selection\nfrom sklearn.feature_selection import mutual_info_classif, SelectFromModel, RFE, RFECV, SelectKBest, chi2\n\n#Model selection\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, GridSearchCV, RandomizedSearchCV, cross_val_score\n\n#Model pipe\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.impute import SimpleImputer\n\n#Preprocessing\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, OneHotEncoder, LabelEncoder, label_binarize\nfrom imblearn.over_sampling import SMOTE\n\n#Model\nimport xgboost as xgb\nfrom sklearn.decomposition import PCA\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\n#Evalution\nfrom sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix, roc_curve, auc, precision_recall_curve, average_precision_score\nfrom sklearn.tree import plot_tree ","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:34:07.855677Z","iopub.execute_input":"2024-06-20T14:34:07.856665Z","iopub.status.idle":"2024-06-20T14:34:31.421485Z","shell.execute_reply.started":"2024-06-20T14:34:07.856618Z","shell.execute_reply":"2024-06-20T14:34:31.419908Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stderr","text":"2024-06-20 14:34:13.642424: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-06-20 14:34:13.642596: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-06-20 14:34:13.902865: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# Load Data","metadata":{}},{"cell_type":"code","source":"class LoadingFile():\n    def __init__(self, path, name, url=None):\n        self.path = path\n        self.name = name\n        self.url = url\n\n    def size(self):\n        kib = 1024\n        size = os.path.getsize(Path(self.path))\n        print(f\"{self.name} size: {np.round(size / kib)} Kib\")\n\n    def Encoding_predict(self):\n        file_path = Path(self.path)\n        with open(file_path, 'rb') as f:\n            contents = f.read()\n\n        encoding_info = chardet.detect(contents)\n\n        detected_encoding = encoding_info['encoding']\n        confidence = encoding_info['confidence']\n\n        print(f\"File name: {self.name:<25}\\nEncoding: {detected_encoding:<10}Confidence: {confidence}\")\n\n\n    def download_data(self):\n        data_path = Path(self.path)\n        if data_path.is_dir():\n            print(f\"{data_path} directory exist.\")\n        else:\n            print(f\"Creating {data_path}\")\n            data_path.mkdir(parents=True, exist_ok=True)\n\n        if (data_path / Path(self.name)).exists():\n            print(f\"{self.name} already exist\")\n            pass\n        else:\n            with open(data_path / self.name, \"wb\") as f:\n                req = requests.get(self.url)\n                print(\"Downloading data...\")\n                f.write(req.content)\n                print(\"Done!\")\nname=[]\npath = []\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        name.append(filename)\n        path.append(os.path.join(dirname, filename))\n\n        print(f\"Path: {dirname} | Data_Name: {filename}\")\n        size = LoadingFile(os.path.join(dirname, filename), filename).size()\n        print()\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:34:31.424040Z","iopub.execute_input":"2024-06-20T14:34:31.425267Z","iopub.status.idle":"2024-06-20T14:34:31.460642Z","shell.execute_reply.started":"2024-06-20T14:34:31.425207Z","shell.execute_reply":"2024-06-20T14:34:31.459195Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Path: /kaggle/input/forest-cover-type-prediction | Data_Name: train.csv.zip\ntrain.csv.zip size: 333.0 Kib\n\nPath: /kaggle/input/forest-cover-type-prediction | Data_Name: sampleSubmission.csv\nsampleSubmission.csv size: 4891.0 Kib\n\nPath: /kaggle/input/forest-cover-type-prediction | Data_Name: sampleSubmission.csv.zip\nsampleSubmission.csv.zip size: 1218.0 Kib\n\nPath: /kaggle/input/forest-cover-type-prediction | Data_Name: test3.csv\ntest3.csv size: 0.0 Kib\n\nPath: /kaggle/input/forest-cover-type-prediction | Data_Name: train.csv\ntrain.csv size: 1982.0 Kib\n\nPath: /kaggle/input/forest-cover-type-prediction | Data_Name: test.csv\ntest.csv size: 74185.0 Kib\n\nPath: /kaggle/input/forest-cover-type-prediction | Data_Name: test.csv.zip\ntest.csv.zip size: 11767.0 Kib\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# load data one for analysis another for analysis\ntrain = pd.read_csv(path[4])\ntest = pd.read_csv(path[5])","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:42:52.316952Z","iopub.execute_input":"2024-06-20T14:42:52.317441Z","iopub.status.idle":"2024-06-20T14:42:56.990730Z","shell.execute_reply.started":"2024-06-20T14:42:52.317407Z","shell.execute_reply":"2024-06-20T14:42:56.988957Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"print(f\"Train Shape : {train.shape}\\nTest Shape : {test.shape}\")","metadata":{"execution":{"iopub.status.busy":"2024-06-20T15:10:59.815733Z","iopub.execute_input":"2024-06-20T15:10:59.816241Z","iopub.status.idle":"2024-06-20T15:10:59.823691Z","shell.execute_reply.started":"2024-06-20T15:10:59.816209Z","shell.execute_reply":"2024-06-20T15:10:59.822156Z"},"trusted":true},"execution_count":30,"outputs":[{"name":"stdout","text":"Train Shape : (15120, 56)\nTest Shape : (565892, 55)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The sample size of test is larger than train.","metadata":{}},{"cell_type":"code","source":"train.info(memory_usage=\"deep\")","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:42:56.993583Z","iopub.execute_input":"2024-06-20T14:42:56.994016Z","iopub.status.idle":"2024-06-20T14:42:57.018421Z","shell.execute_reply.started":"2024-06-20T14:42:56.993982Z","shell.execute_reply":"2024-06-20T14:42:57.017020Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 15120 entries, 0 to 15119\nData columns (total 56 columns):\n #   Column                              Non-Null Count  Dtype\n---  ------                              --------------  -----\n 0   Id                                  15120 non-null  int64\n 1   Elevation                           15120 non-null  int64\n 2   Aspect                              15120 non-null  int64\n 3   Slope                               15120 non-null  int64\n 4   Horizontal_Distance_To_Hydrology    15120 non-null  int64\n 5   Vertical_Distance_To_Hydrology      15120 non-null  int64\n 6   Horizontal_Distance_To_Roadways     15120 non-null  int64\n 7   Hillshade_9am                       15120 non-null  int64\n 8   Hillshade_Noon                      15120 non-null  int64\n 9   Hillshade_3pm                       15120 non-null  int64\n 10  Horizontal_Distance_To_Fire_Points  15120 non-null  int64\n 11  Wilderness_Area1                    15120 non-null  int64\n 12  Wilderness_Area2                    15120 non-null  int64\n 13  Wilderness_Area3                    15120 non-null  int64\n 14  Wilderness_Area4                    15120 non-null  int64\n 15  Soil_Type1                          15120 non-null  int64\n 16  Soil_Type2                          15120 non-null  int64\n 17  Soil_Type3                          15120 non-null  int64\n 18  Soil_Type4                          15120 non-null  int64\n 19  Soil_Type5                          15120 non-null  int64\n 20  Soil_Type6                          15120 non-null  int64\n 21  Soil_Type7                          15120 non-null  int64\n 22  Soil_Type8                          15120 non-null  int64\n 23  Soil_Type9                          15120 non-null  int64\n 24  Soil_Type10                         15120 non-null  int64\n 25  Soil_Type11                         15120 non-null  int64\n 26  Soil_Type12                         15120 non-null  int64\n 27  Soil_Type13                         15120 non-null  int64\n 28  Soil_Type14                         15120 non-null  int64\n 29  Soil_Type15                         15120 non-null  int64\n 30  Soil_Type16                         15120 non-null  int64\n 31  Soil_Type17                         15120 non-null  int64\n 32  Soil_Type18                         15120 non-null  int64\n 33  Soil_Type19                         15120 non-null  int64\n 34  Soil_Type20                         15120 non-null  int64\n 35  Soil_Type21                         15120 non-null  int64\n 36  Soil_Type22                         15120 non-null  int64\n 37  Soil_Type23                         15120 non-null  int64\n 38  Soil_Type24                         15120 non-null  int64\n 39  Soil_Type25                         15120 non-null  int64\n 40  Soil_Type26                         15120 non-null  int64\n 41  Soil_Type27                         15120 non-null  int64\n 42  Soil_Type28                         15120 non-null  int64\n 43  Soil_Type29                         15120 non-null  int64\n 44  Soil_Type30                         15120 non-null  int64\n 45  Soil_Type31                         15120 non-null  int64\n 46  Soil_Type32                         15120 non-null  int64\n 47  Soil_Type33                         15120 non-null  int64\n 48  Soil_Type34                         15120 non-null  int64\n 49  Soil_Type35                         15120 non-null  int64\n 50  Soil_Type36                         15120 non-null  int64\n 51  Soil_Type37                         15120 non-null  int64\n 52  Soil_Type38                         15120 non-null  int64\n 53  Soil_Type39                         15120 non-null  int64\n 54  Soil_Type40                         15120 non-null  int64\n 55  Cover_Type                          15120 non-null  int64\ndtypes: int64(56)\nmemory usage: 6.5 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"test.info(memory_usage=\"deep\")","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:42:57.020552Z","iopub.execute_input":"2024-06-20T14:42:57.021329Z","iopub.status.idle":"2024-06-20T14:42:57.081879Z","shell.execute_reply.started":"2024-06-20T14:42:57.021280Z","shell.execute_reply":"2024-06-20T14:42:57.080113Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 565892 entries, 0 to 565891\nData columns (total 55 columns):\n #   Column                              Non-Null Count   Dtype\n---  ------                              --------------   -----\n 0   Id                                  565892 non-null  int64\n 1   Elevation                           565892 non-null  int64\n 2   Aspect                              565892 non-null  int64\n 3   Slope                               565892 non-null  int64\n 4   Horizontal_Distance_To_Hydrology    565892 non-null  int64\n 5   Vertical_Distance_To_Hydrology      565892 non-null  int64\n 6   Horizontal_Distance_To_Roadways     565892 non-null  int64\n 7   Hillshade_9am                       565892 non-null  int64\n 8   Hillshade_Noon                      565892 non-null  int64\n 9   Hillshade_3pm                       565892 non-null  int64\n 10  Horizontal_Distance_To_Fire_Points  565892 non-null  int64\n 11  Wilderness_Area1                    565892 non-null  int64\n 12  Wilderness_Area2                    565892 non-null  int64\n 13  Wilderness_Area3                    565892 non-null  int64\n 14  Wilderness_Area4                    565892 non-null  int64\n 15  Soil_Type1                          565892 non-null  int64\n 16  Soil_Type2                          565892 non-null  int64\n 17  Soil_Type3                          565892 non-null  int64\n 18  Soil_Type4                          565892 non-null  int64\n 19  Soil_Type5                          565892 non-null  int64\n 20  Soil_Type6                          565892 non-null  int64\n 21  Soil_Type7                          565892 non-null  int64\n 22  Soil_Type8                          565892 non-null  int64\n 23  Soil_Type9                          565892 non-null  int64\n 24  Soil_Type10                         565892 non-null  int64\n 25  Soil_Type11                         565892 non-null  int64\n 26  Soil_Type12                         565892 non-null  int64\n 27  Soil_Type13                         565892 non-null  int64\n 28  Soil_Type14                         565892 non-null  int64\n 29  Soil_Type15                         565892 non-null  int64\n 30  Soil_Type16                         565892 non-null  int64\n 31  Soil_Type17                         565892 non-null  int64\n 32  Soil_Type18                         565892 non-null  int64\n 33  Soil_Type19                         565892 non-null  int64\n 34  Soil_Type20                         565892 non-null  int64\n 35  Soil_Type21                         565892 non-null  int64\n 36  Soil_Type22                         565892 non-null  int64\n 37  Soil_Type23                         565892 non-null  int64\n 38  Soil_Type24                         565892 non-null  int64\n 39  Soil_Type25                         565892 non-null  int64\n 40  Soil_Type26                         565892 non-null  int64\n 41  Soil_Type27                         565892 non-null  int64\n 42  Soil_Type28                         565892 non-null  int64\n 43  Soil_Type29                         565892 non-null  int64\n 44  Soil_Type30                         565892 non-null  int64\n 45  Soil_Type31                         565892 non-null  int64\n 46  Soil_Type32                         565892 non-null  int64\n 47  Soil_Type33                         565892 non-null  int64\n 48  Soil_Type34                         565892 non-null  int64\n 49  Soil_Type35                         565892 non-null  int64\n 50  Soil_Type36                         565892 non-null  int64\n 51  Soil_Type37                         565892 non-null  int64\n 52  Soil_Type38                         565892 non-null  int64\n 53  Soil_Type39                         565892 non-null  int64\n 54  Soil_Type40                         565892 non-null  int64\ndtypes: int64(55)\nmemory usage: 237.5 MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"*Notes*\n\n- The memory usage is higher when looking at the Test set, but it's only 237.5MB, so it's still manageable.\n- The categorical features in the data have all been encoded using one-hot encoding.","metadata":{}},{"cell_type":"markdown","source":"**Duplicate Value**","metadata":{}},{"cell_type":"code","source":"print(f'Duplicates in train set: {train.duplicated().sum()}, ({np.round(100*train.duplicated().sum()/len(train),1)}%)')\nprint('')\nprint(f'Duplicates in test set: {test.duplicated().sum()}, ({np.round(100*test.duplicated().sum()/len(test),1)}%)')","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:48:00.804937Z","iopub.execute_input":"2024-06-20T14:48:00.805533Z","iopub.status.idle":"2024-06-20T14:48:02.006846Z","shell.execute_reply.started":"2024-06-20T14:48:00.805485Z","shell.execute_reply":"2024-06-20T14:48:02.005436Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"Duplicates in train set: 0, (0.0%)\n\nDuplicates in test set: 0, (0.0%)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"No duplicate value!","metadata":{}},{"cell_type":"markdown","source":"**Missing Value**","metadata":{}},{"cell_type":"code","source":"print('TRAIN SET MISSING VALUES:')\nprint(train.isna().sum())\nprint('')\nprint('TEST SET MISSING VALUES:')\nprint(test.isna().sum())","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:48:03.669114Z","iopub.execute_input":"2024-06-20T14:48:03.669645Z","iopub.status.idle":"2024-06-20T14:48:03.721332Z","shell.execute_reply.started":"2024-06-20T14:48:03.669606Z","shell.execute_reply":"2024-06-20T14:48:03.720133Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"TRAIN SET MISSING VALUES:\nId                                    0\nElevation                             0\nAspect                                0\nSlope                                 0\nHorizontal_Distance_To_Hydrology      0\nVertical_Distance_To_Hydrology        0\nHorizontal_Distance_To_Roadways       0\nHillshade_9am                         0\nHillshade_Noon                        0\nHillshade_3pm                         0\nHorizontal_Distance_To_Fire_Points    0\nWilderness_Area1                      0\nWilderness_Area2                      0\nWilderness_Area3                      0\nWilderness_Area4                      0\nSoil_Type1                            0\nSoil_Type2                            0\nSoil_Type3                            0\nSoil_Type4                            0\nSoil_Type5                            0\nSoil_Type6                            0\nSoil_Type7                            0\nSoil_Type8                            0\nSoil_Type9                            0\nSoil_Type10                           0\nSoil_Type11                           0\nSoil_Type12                           0\nSoil_Type13                           0\nSoil_Type14                           0\nSoil_Type15                           0\nSoil_Type16                           0\nSoil_Type17                           0\nSoil_Type18                           0\nSoil_Type19                           0\nSoil_Type20                           0\nSoil_Type21                           0\nSoil_Type22                           0\nSoil_Type23                           0\nSoil_Type24                           0\nSoil_Type25                           0\nSoil_Type26                           0\nSoil_Type27                           0\nSoil_Type28                           0\nSoil_Type29                           0\nSoil_Type30                           0\nSoil_Type31                           0\nSoil_Type32                           0\nSoil_Type33                           0\nSoil_Type34                           0\nSoil_Type35                           0\nSoil_Type36                           0\nSoil_Type37                           0\nSoil_Type38                           0\nSoil_Type39                           0\nSoil_Type40                           0\nCover_Type                            0\ndtype: int64\n\nTEST SET MISSING VALUES:\nId                                    0\nElevation                             0\nAspect                                0\nSlope                                 0\nHorizontal_Distance_To_Hydrology      0\nVertical_Distance_To_Hydrology        0\nHorizontal_Distance_To_Roadways       0\nHillshade_9am                         0\nHillshade_Noon                        0\nHillshade_3pm                         0\nHorizontal_Distance_To_Fire_Points    0\nWilderness_Area1                      0\nWilderness_Area2                      0\nWilderness_Area3                      0\nWilderness_Area4                      0\nSoil_Type1                            0\nSoil_Type2                            0\nSoil_Type3                            0\nSoil_Type4                            0\nSoil_Type5                            0\nSoil_Type6                            0\nSoil_Type7                            0\nSoil_Type8                            0\nSoil_Type9                            0\nSoil_Type10                           0\nSoil_Type11                           0\nSoil_Type12                           0\nSoil_Type13                           0\nSoil_Type14                           0\nSoil_Type15                           0\nSoil_Type16                           0\nSoil_Type17                           0\nSoil_Type18                           0\nSoil_Type19                           0\nSoil_Type20                           0\nSoil_Type21                           0\nSoil_Type22                           0\nSoil_Type23                           0\nSoil_Type24                           0\nSoil_Type25                           0\nSoil_Type26                           0\nSoil_Type27                           0\nSoil_Type28                           0\nSoil_Type29                           0\nSoil_Type30                           0\nSoil_Type31                           0\nSoil_Type32                           0\nSoil_Type33                           0\nSoil_Type34                           0\nSoil_Type35                           0\nSoil_Type36                           0\nSoil_Type37                           0\nSoil_Type38                           0\nSoil_Type39                           0\nSoil_Type40                           0\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"markdown","source":"No missing value","metadata":{}},{"cell_type":"markdown","source":"### Cardinality of features","metadata":{}},{"cell_type":"code","source":"train.nunique()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:51:31.724409Z","iopub.execute_input":"2024-06-20T14:51:31.724938Z","iopub.status.idle":"2024-06-20T14:51:31.751549Z","shell.execute_reply.started":"2024-06-20T14:51:31.724900Z","shell.execute_reply":"2024-06-20T14:51:31.750119Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"Id                                    15120\nElevation                              1665\nAspect                                  361\nSlope                                    52\nHorizontal_Distance_To_Hydrology        400\nVertical_Distance_To_Hydrology          423\nHorizontal_Distance_To_Roadways        3250\nHillshade_9am                           176\nHillshade_Noon                          141\nHillshade_3pm                           247\nHorizontal_Distance_To_Fire_Points     2710\nWilderness_Area1                          2\nWilderness_Area2                          2\nWilderness_Area3                          2\nWilderness_Area4                          2\nSoil_Type1                                2\nSoil_Type2                                2\nSoil_Type3                                2\nSoil_Type4                                2\nSoil_Type5                                2\nSoil_Type6                                2\nSoil_Type7                                1\nSoil_Type8                                2\nSoil_Type9                                2\nSoil_Type10                               2\nSoil_Type11                               2\nSoil_Type12                               2\nSoil_Type13                               2\nSoil_Type14                               2\nSoil_Type15                               1\nSoil_Type16                               2\nSoil_Type17                               2\nSoil_Type18                               2\nSoil_Type19                               2\nSoil_Type20                               2\nSoil_Type21                               2\nSoil_Type22                               2\nSoil_Type23                               2\nSoil_Type24                               2\nSoil_Type25                               2\nSoil_Type26                               2\nSoil_Type27                               2\nSoil_Type28                               2\nSoil_Type29                               2\nSoil_Type30                               2\nSoil_Type31                               2\nSoil_Type32                               2\nSoil_Type33                               2\nSoil_Type34                               2\nSoil_Type35                               2\nSoil_Type36                               2\nSoil_Type37                               2\nSoil_Type38                               2\nSoil_Type39                               2\nSoil_Type40                               2\nCover_Type                                7\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train.nunique()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T14:52:25.218113Z","iopub.execute_input":"2024-06-20T14:52:25.218601Z","iopub.status.idle":"2024-06-20T14:52:25.245654Z","shell.execute_reply.started":"2024-06-20T14:52:25.218565Z","shell.execute_reply":"2024-06-20T14:52:25.244354Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"Id                                    15120\nElevation                              1665\nAspect                                  361\nSlope                                    52\nHorizontal_Distance_To_Hydrology        400\nVertical_Distance_To_Hydrology          423\nHorizontal_Distance_To_Roadways        3250\nHillshade_9am                           176\nHillshade_Noon                          141\nHillshade_3pm                           247\nHorizontal_Distance_To_Fire_Points     2710\nWilderness_Area1                          2\nWilderness_Area2                          2\nWilderness_Area3                          2\nWilderness_Area4                          2\nSoil_Type1                                2\nSoil_Type2                                2\nSoil_Type3                                2\nSoil_Type4                                2\nSoil_Type5                                2\nSoil_Type6                                2\nSoil_Type7                                1\nSoil_Type8                                2\nSoil_Type9                                2\nSoil_Type10                               2\nSoil_Type11                               2\nSoil_Type12                               2\nSoil_Type13                               2\nSoil_Type14                               2\nSoil_Type15                               1\nSoil_Type16                               2\nSoil_Type17                               2\nSoil_Type18                               2\nSoil_Type19                               2\nSoil_Type20                               2\nSoil_Type21                               2\nSoil_Type22                               2\nSoil_Type23                               2\nSoil_Type24                               2\nSoil_Type25                               2\nSoil_Type26                               2\nSoil_Type27                               2\nSoil_Type28                               2\nSoil_Type29                               2\nSoil_Type30                               2\nSoil_Type31                               2\nSoil_Type32                               2\nSoil_Type33                               2\nSoil_Type34                               2\nSoil_Type35                               2\nSoil_Type36                               2\nSoil_Type37                               2\nSoil_Type38                               2\nSoil_Type39                               2\nSoil_Type40                               2\nCover_Type                                7\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"*Notes*\n\n- In both the train and test datasets, `Soil_Type7` and `Soil_Type15` have a value of 1 consistently, indicating that there is no data for soil types 7 and 15 in the dataset.\n\n*Insight*\n\n- Drop `Soil_Type7` and `Soil_Type15`\n","metadata":{}},{"cell_type":"code","source":"numeric_feature_names = [\"Elevation\",\n                         \"Aspect\", \n                         \"Slope\",\n                         \"Horizontal_Distance_To_Hydrology\",\n                         \"Vertical_Distance_To_Hydrology\",\n                         \"Horizontal_Distance_To_Roadways\",\n                         \"Hillshade_9am\",\n                         \"Hillshade_Noon\",\n                         \"Hillshade_3pm\",\n                         \"Horizontal_Distance_To_Fire_Points\"\n                         ]\ncategoric_feature_names = [col_name for col_name in train.columns if col_name.split(\"_\")[0] in [\"Wilderness\", \"Soil\"]]\ntarget = \"Cover_Type\"","metadata":{"execution":{"iopub.status.busy":"2024-06-20T15:08:36.475555Z","iopub.execute_input":"2024-06-20T15:08:36.476155Z","iopub.status.idle":"2024-06-20T15:08:36.485125Z","shell.execute_reply.started":"2024-06-20T15:08:36.476105Z","shell.execute_reply":"2024-06-20T15:08:36.483251Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"#Check if we type wrong feature name\ntrain[numeric_feature_names+categoric_feature_names+[target]].shape","metadata":{"execution":{"iopub.status.busy":"2024-06-20T15:12:09.343693Z","iopub.execute_input":"2024-06-20T15:12:09.344346Z","iopub.status.idle":"2024-06-20T15:12:09.358001Z","shell.execute_reply.started":"2024-06-20T15:12:09.344301Z","shell.execute_reply":"2024-06-20T15:12:09.356143Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"(15120, 55)"},"metadata":{}}]},{"cell_type":"markdown","source":"----","metadata":{}},{"cell_type":"markdown","source":"# EDA","metadata":{}},{"cell_type":"markdown","source":"**Target distribution**","metadata":{}},{"cell_type":"code","source":"sns.countplot(x = train[target])\nplt.title(f\"{target} distribution\")","metadata":{"execution":{"iopub.status.busy":"2024-06-20T15:04:37.639991Z","iopub.execute_input":"2024-06-20T15:04:37.640520Z","iopub.status.idle":"2024-06-20T15:04:38.125010Z","shell.execute_reply.started":"2024-06-20T15:04:37.640486Z","shell.execute_reply":"2024-06-20T15:04:38.123434Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Cover_Type distribution')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"*Notes*\n\n- All features are equally amount, so we don't need to resample it when training model.","metadata":{}},{"cell_type":"markdown","source":"**Numeric features**","metadata":{}},{"cell_type":"markdown","source":"`Elevation`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Aspect`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Slope`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Horizontal_Distance_To_Hydrology`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Vertical_Distance_To_Hydrology`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Horizontal_Distance_To_Roadways`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Hillshade_9am`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Hillshade_Noon`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Hillshade_3pm`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Horizontal_Distance_To_Fire_Points`","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}